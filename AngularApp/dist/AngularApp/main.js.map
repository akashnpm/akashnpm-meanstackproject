{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/shared/employee.model.ts","webpack:///./src/app/shared/employee.service.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-employee></app-employee>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeService } from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 \\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-content white-text\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s5\\\" >\\n            <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(employeeForm)\\\">\\n              <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee._id\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type=\\\"text\\\" name=\\\"name\\\"  [(ngModel)]=\\\"employeeService.selectedEmployee.name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter full name\\\" required>\\n                  <label>Name:\\n                    <label class=\\\"red-text\\\">*</label>\\n                  </label>\\n                 </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type=\\\"text\\\" name=\\\"position\\\" #position=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.position\\\" placeholder=\\\"Eg. developer\\\">\\n                  <label>Position:\\n                    <label class=\\\"red-text\\\">*</label>\\n                  </label>\\n                 </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type=\\\"text\\\" name=\\\"office\\\" #office=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.office\\\" placeholder=\\\"Enter office location\\\">\\n                  <label>Office:\\n                    <label class=\\\"red-text\\\">*</label>\\n                  </label>\\n                 </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type=\\\"text\\\" name=\\\"salary\\\" #salary=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.salary\\\" placeholder=\\\"salary per annum\\\">\\n                  <label>Salary:\\n                    <label class=\\\"red-text\\\">*</label>\\n                  </label>\\n                 </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-custom right\\\" (click)=\\\"resetForm(employeeForm)\\\">Reset </button>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-custom right\\\" >Submit </button>\\n                 </div>\\n              </div>\\n\\n            </form>\\n          </div>\\n          <div class=\\\"col s7\\\">\\n          <table class=\\\"responsive-table highlighted\\\">\\n            <thead>\\n              <th>Name</th>\\n              <th>Position</th>\\n              <th>Office</th>\\n              <th></th>\\n            </thead>\\n            <tr *ngFor=\\\"let emp of employees\\\" >\\n              <td>{{emp.name}} </td>\\n              <td>{{emp.position}}</td>\\n              <td>{{emp.office}}</td>\\n              <td>\\n                <a class=\\\"action-btn\\\" (click)=\\\"onEdit(emp)\\\"> <i class=\\\"material-icons\\\" >edit </i> </a>\\n                <a class=\\\"action-btn\\\" (click)=\\\"onDelete(emp._id, employeeForm)\\\"> <i class=\\\"material-icons\\\" >delete </i> </a>\\n              </td>\\n            </tr>\\n          </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Employee, EmployeeService } from '../shared';\n\ndeclare var M: any;\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers: [EmployeeService]\n})\nexport class EmployeeComponent implements OnInit {\n\n  employees: Employee[] = [];\n  constructor(public employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.employees = [];\n    this.refreshEmployeeList();\n\n  }\n\n  resetForm(employeeForm?: NgForm) {\n    if (employeeForm) {\n      employeeForm.resetForm();\n\n      this.employeeService.selectedEmployee = {\n        _id: \"\",\n        name: \"\",\n        position: \"\",\n        salary: null,\n        office: \"\"\n      }\n    }\n  }\n\n  onSubmit(employeeForm?: NgForm) {\n    if (employeeForm.value._id == \"\") {\n      this.employeeService.postEmployee(employeeForm.value).subscribe((res) => {\n        this.resetForm(employeeForm);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Saved successfully!', classes: 'rounded' });\n      });\n    } else {\n      this.employeeService.putEmployee(employeeForm.value).subscribe((res) => {\n        this.resetForm(employeeForm);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Updated successfully!', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshEmployeeList() {\n    this.employeeService.getEmployeeist().subscribe((res) => {\n      this.employees = res as Employee[];\n    });\n  }\n\n  onEdit(emp: Employee) {\n    this.employeeService.selectedEmployee = emp;\n\n  }\n  onDelete(_id: string, employeeForm: NgForm) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.employeeService.deleteEmployee(_id).subscribe((res) => {\n        this.refreshEmployeeList();\n        this.resetForm(employeeForm);\n        M.toast({ html: 'Deleted successfully!', classes: 'rounded' });\n      });\n    }\n\n\n  }\n\n}\n","export class Employee {\n    _id: string;\n    name: string;\n    position: string;\n    office: string;\n    salary: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Employee } from './employee.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  selectedEmployee = new Employee();\n  \n  baseurl = 'http://localhost:3000/employees';\n\n  constructor(private http: HttpClient) { }\n\n  postEmployee(emp : Employee) {\nreturn this.http.post(this.baseurl, emp);\n  }\n\n  getEmployeeist(){\n    return this.http.get(this.baseurl);\n  }\n\n  putEmployee(emp: Employee) {\n    return this.http.put(this.baseurl +`/${emp._id}` , emp);\n  }\n  deleteEmployee(_id: string) {\n    return this.http.delete(this.baseurl +`/${_id}`);\n  }\n}\n","export * from './employee.model';\r\nexport * from  './employee.service';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}